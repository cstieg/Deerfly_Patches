@model Deerfly_Patches.Modules.PayPal.ShoppingCart

@{
    ViewData["Title"] = "Shopping Cart";
}

<h1>Shopping Cart</h1>
<hr />

<div class="container">
    <div class="row item-detail-header">
        <div class="col-xs-5 col-sm-6 col-md-5 col-lg-5 item-name">Product</div>
        <div class="hidden-xs col-sm-2 col-md-1 col-lg-1 item-unit-price">Unit Price</div>
        <div class="col-xs-4 col-sm-2 col-md-2 col-lg-2 item-quantity">Quantity</div>
        <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-extended-price">Price</div>
        <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-shipping">Shipping</div>
        <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 item-total-price">Total Price</div>
        <div class="col-xs-1"></div>
    </div>
    <hr />
@if (Model != null && Model.GetItems().Count != 0)
{
    foreach (var item in Model.GetItems())
    {
        <div class="row item-detail-line" id="item-@item.Product.ProductId">
            <div class="col-xs-5 col-sm-6 col-md-5 col-lg-5 item-name">@item.Product.Name</div>
            <div class="hidden-xs col-sm-2 col-md-1 col-lg-1 item-unit-price">$@item.UnitPrice</div>
            <div class="col-xs-4 col-sm-2 col-md-2 col-lg-2 item-quantity">
                <button onclick="decrementItemInShoppingCart(@item.Product.ProductId)">-</button>
                <span class="item-qty-ct" id="qty-@item.Product.ProductId">@item.Quantity</span>
                <button onclick="incrementItemInShoppingCart(@item.Product.ProductId)">+</button>
            </div>
            <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-extended-price">$@item.ExtendedPrice</div>
            <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-shipping">$@item.Shipping</div>
            <div class="item-shipping-saved hidden">@item.Shipping</div>
            <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 item-total-price">$@item.TotalPrice</div>
            <div class="col-xs-1">
                <button onclick="removeItemInShoppingCart(@item.Product.ProductId)">x</button>
            </div>
        </div>
    }

    <hr />
    <div class="row item-detail-total">
        <div class="col-xs-5 col-sm-6 col-md-5 col-lg-5 item-name">TOTAL:</div>
        <div class="hidden-xs col-sm-2 col-md-1 col-lg-1 item-unit-price"></div>
        <div class="col-xs-4 col-sm-2 col-md-2 col-lg-2 item-quantity"></div>
        <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-extended-price">$@Model.TotalExtendedPrice</div>
        <div class="hidden-xs hidden-sm col-md-1 col-lg-1 item-shipping">$@Model.TotalShipping</div>
        <div class="col-xs-2 col-sm-1 col-md-1 col-lg-1 item-total-price">$@Model.GrandTotal</div>
        <div class="col-xs-1"></div>
    </div>

    <hr />
    <div class="hidden col-md-6"></div>

    <script>
    window.onload = function () {
        setCountry();
    };
    </script>
    <div id="country-select" class="row">
        <form onchange="countryChange()">
            <input type="radio" name="country" value="US" checked/>US
            <input type="radio" name="country" value="International" />International
        </form>
    </div>
    
    <div id="enter-promo-code">
        <form method="post" action="/ShoppingCart/AddPromoCode">
            <label for="promocode">Enter Promo Code</label>
            <input name="promocode" type="text" />
            <input type="submit" value="Apply" />
        </form>
        <div id="promo-codes-applied">
            <p>Promocodes applied: </p>
        </div>
    </div>

    <div class="clearfix"></div>
    <hr />
    <div class="text-right">
        <div id="paypal-button-container"></div>
        <p>Please click the PayPal button to pay</p>
    </div>
    
    <div class="hidden">
        <span id="paypalClientId">@ViewBag.ClientInfo.ClientId</span>
        <span id="paypalMode">@ViewBag.ClientInfo.Mode</span>
        <span id="paypalLoginReturnId">@ViewBag.ClientInfo.ReturnUrl</span>
    </div>



    <script src="https://www.paypalobjects.com/api/checkout.js"></script>
    <script>
        var clientInfo = {
            clientId: document.getElementById('paypalClientId').innerText,
            mode: document.getElementById('paypalMode').innerText,
            paypalLoginReturnId: document.getElementById('paypalLoginReturnId').innerText
        };

        paypal.Button.render({

            env: clientInfo.mode,

            client: {
                sandbox: clientInfo.clientId,
                production: clientInfo.clientId
            },

            // Show the buyer a 'Pay Now' button in the checkout flow
            commit: true,

            // payment() is called when the button is clicked
            payment: function (data, actions) {
                // Get JSON order information from server
                return $.get('/paypal/GetOrderJson')
                    .then(function (data) {
                        var payment = JSON.parse(data);

                        // Make a call to the REST api to create the payment
                        return actions.payment.create({ payment: payment });
                    })
                    .catch(function (data) {
                        debugger;
                        alert("Error processing order :(");
                    });
            },

            // onAuthorize() is called when the buyer approves the payment
            onAuthorize: function (data, actions) {
                debugger;


                // verify country

                // Make a call to the REST api to execute the payment
                return actions.payment.execute().then(function () {

                    // verify order information, cancel if incorrect


                    window.alert('Payment Complete!');
                });
            }

        }, '#paypal-button-container');

    </script>   
}
else
{
    <div class="row">
        <h3>No Items in Shopping Cart</h3>
        <p>Go back to @Html.ActionLink("orders", "Index", "Order")</p>
    </div>
}

</div>
