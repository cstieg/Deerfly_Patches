@model Deerfly_Patches.Modules.PayPal.ShoppingCart

@{
    ViewBag.Title = "Checkout";
}

@if (Model.GetOrder().ShipToAddress.Address1 == null 
    || Model.GetOrder().ShipToAddress.Address1 == "")
{
    ViewBag.addressDisplay = "hidden";
    ViewBag.addressEdit = "";
}
else
{
    ViewBag.addressDisplay = "";
    ViewBag.addressEdit = "hidden";
}

<h2>Checkout</h2>

<div class="col-sm-6" id="shipping-address">
    <h3>Ship To:</h3>
    <div id="shipping-address-display" class="@ViewBag.addressDisplay">
        <p>@Model.Order.ShipToAddress.Recipient</p>
        <p>@Model.Order.ShipToAddress.Address1</p>
        @if(Model.Order.ShipToAddress.Address2 != "")
        {
            <p>@Model.Order.ShipToAddress.Address2</p>
        }
        <p>@Model.Order.ShipToAddress.City, @Model.Order.ShipToAddress.State @Model.Order.ShipToAddress.Zip</p>
        <p>@Model.Order.ShipToAddress.Country</p>
        <p>@Model.Order.ShipToAddress.Phone</p>
        <button onclick="changeShippingAddress()">Change</button>
    </div>

    <div id="shipping-address-edit" class="@ViewBag.addressEdit">
        @Html.Partial("_EditShippingAddressPartial", Model.GetOrder().ShipToAddress)
    </div>
</div> 

<div class="col-sm-6" id="payment-summary" >
    <h3>Payment Summary</h3>
    <div class="row" id="payment-summary-subtotal">
        <div class="col-xs-6 payment-summary-label">
            Subtotal:
        </div>
        <div class="col-xs-6 payment-summary-amount">
            @Model.TotalExtendedPrice
        </div>
    </div>

    <div class="row" id="payment-summary-shipping">
        <div class="col-xs-6 payment-summary-label">
            Shipping:
        </div>
        <div class="col-xs-6 payment-summary-amount">
            @Model.TotalShipping
        </div>
    </div>

    <div class="row" id="payment-summary-grandtotal">
        <div class="col-xs-6 payment-summary-label">
            Grand Total:
        </div>
        <div class="col-xs-6 payment-summary-amount">
            @Model.GrandTotal
        </div>
    </div>

    <div class="row">
        <div class="col-xs-6"></div>
        <div class="col-xs-6" id="paypal-button" onload="renderPayPal();"></div>
    </div>

</div>

<div class="clearfix"></div>

<div id="order-summary" class="col-sm-12">
    <h3>Order Summary</h3>
    <div class="row">
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().Product.Name)
        </div>
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().UnitPrice)
        </div>
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().Quantity)
        </div>
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().ExtendedPrice)
        </div>
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().Shipping)
        </div>
        <div class="col-xs-2">
            @Html.LabelFor(model => model.OrderDetails.First().TotalPrice)
        </div>
    </div>

    @foreach(var item in Model.OrderDetails)
    {
        <div class="row">
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.Product.Name)
            </div>
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.UnitPrice)
            </div>
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.Quantity)
            </div>
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.ExtendedPrice)
            </div>
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.Shipping)
            </div>
            <div class="col-xs-2">
                @Html.DisplayFor(label => item.TotalPrice)
            </div>
        </div>
    }
    <div class="row">
        <div class="col-xs-2">
            TOTAL:
        </div>
        <div class="col-xs-2">
        </div>
        <div class="col-xs-2">
        </div>
        <div class="col-xs-2">
            @Html.DisplayFor(model => model.TotalExtendedPrice)
        </div>
        <div class="col-xs-2">
            @Html.DisplayFor(model => model.TotalShipping)
        </div>
        <div class="col-xs-2">
            @Html.DisplayFor(model => model.GrandTotal)
        </div>
    </div>

</div>



<div class="hidden">
    <span id="createPaymentUrl">@ViewBag.ClientInfo.CreatePaymentUrl</span>
    <span id="executePaymentUrl">@ViewBag.ClientInfo.ExecutePaymentUrl</span>
</div>


<script src="https://www.paypalobjects.com/api/checkout.js"></script>

<script>
    var CREATE_PAYMENT_URL = document.getElementById('createPaymentUrl').innerText;
    var EXECUTE_PAYMENT_URL = document.getElementById('executePaymentUrl').innerText;

    paypal.Button.render({

        env: 'sandbox', // Or 'sandbox' / production

        commit: true, // Show a 'Pay Now' button

        payment: function () {
            return paypal.request.post(CREATE_PAYMENT_URL).then(function (data) {
                return data.id;
            });
        },

        onAuthorize: function (data) {
            return paypal.request.post(EXECUTE_PAYMENT_URL, {
                paymentID: data.paymentID,
                payerID: data.payerID
            }).then(function (data) {
                debugger;
                // The payment is complete!
                // You can now show a confirmation message to the customer
                window.location.href = "/checkout/OrderSuccess";
            });
        }

    }, '#paypal-button');
</script>